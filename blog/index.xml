<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blog on Iqbal Ahmed</title><link>https://dastaniqbal.github.io/blog/</link><description>Recent content in Blog on Iqbal Ahmed</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Wed, 08 Jan 2025 06:07:19 +0000</lastBuildDate><atom:link href="https://dastaniqbal.github.io/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Virtual Maekup: Lipstick Filter using OpenCV and Dlib</title><link>https://dastaniqbal.github.io/blog/2025-01-08-virtual-maekup-lipstick-filter-using-opencv-and-dlib/</link><pubDate>Wed, 08 Jan 2025 06:07:19 +0000</pubDate><guid>https://dastaniqbal.github.io/blog/2025-01-08-virtual-maekup-lipstick-filter-using-opencv-and-dlib/</guid><description>In this post we will walk through the solution to apply lipstick on lips.
We are using dlib to detect the face and extract facial landmark. We will use OpenCV capabilities to do image processing.
These are the steps needed
Image with face Detect face on the image Find lips landmark using dlib. Create a mask for the lips Apply alpha blending mask and original image For eg: I = aF + (1-a)B Display image with applied lipstick Step 1.</description></item><item><title>OpenCV Series: 3. Numpy Data Structures</title><link>https://dastaniqbal.github.io/blog/2021-05-20-opencv-series-4-numpy-data-structures/</link><pubDate>Thu, 20 May 2021 11:09:33 +0000</pubDate><guid>https://dastaniqbal.github.io/blog/2021-05-20-opencv-series-4-numpy-data-structures/</guid><description>As we have used Numpy in our previous post, In this post we gonna learn more about the basics of Numpy which gonna help us in OpenCV.
Numpy is the homogeneous n-dimensional array. Unlike Python list. Numpy array keep all the elements in the same data type. In Numpy, dimensions we called axis. Axis just tells us how many dimensions in the array.
For eg: [1, 2, 1] this is 1-D array, means 1 axis with 3 elements,</description></item><item><title>OpenCV Series: 2. Get Started with OpenCV and Python</title><link>https://dastaniqbal.github.io/blog/2021-05-17-opencv-series-2-get-started-with-opencv-and-python/</link><pubDate>Mon, 17 May 2021 07:42:43 +0000</pubDate><guid>https://dastaniqbal.github.io/blog/2021-05-17-opencv-series-2-get-started-with-opencv-and-python/</guid><description>This is a sample code that does a basic operation reading and writing image and We will learn more about NumPy and cv2.
import numpy as np import cv2 #Read opencv.png logo file from local img = cv2.imread(&amp;quot;opencv.png&amp;quot;) #Create Window cv2.namedWindow(&amp;quot;Logo&amp;quot;,cv2.WINDOW_NORMAL) #Show local opencv.png in window cv2.imshow(&amp;quot;Logo&amp;quot;,img) #Wait user press key eg: Esc cv2.waitKey(0) #Deep copy the opencv.png to output.png in local cv2.imwrite(&amp;quot;output.jpg&amp;quot;,img) exit() Here we are using NumPy, which is a very popular library in AI.</description></item><item><title>OpenCV Series: 1. Installing Python and OpenCV on Mac</title><link>https://dastaniqbal.github.io/blog/2021-05-15-opencv-series-installing-python-and-opencv-on-mac/</link><pubDate>Sat, 15 May 2021 19:36:51 +0000</pubDate><guid>https://dastaniqbal.github.io/blog/2021-05-15-opencv-series-installing-python-and-opencv-on-mac/</guid><description>In this post we will install OpenCV and Python on MacOS
Install XCode sudo xcodebuild -license sudo xcode-select install Install Homebrew ruby -e &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;quot; brew update #To resolve brew error git -C /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core fetch --unshallow #To resolve brew error git -C /usr/local/Homebrew/Library/Taps/homebrew/homebrew-cask fetch --unshallow brew update --force --quiet` Install Python3 #Installing python2 and python3 if not exist brew install python python3 #Symlink python2 and python3 brew link python brew link python3 #If python already installed then it may ask for an upgrade brew upgrade python brew upgrade python3 #Verify python installed correctly which python2 which python3 #Check python version python2 --version python3 --version Install OpenCV # Install OpenCV 3 with Python2 and Python3 bindings brew install opencv@3 #add OpenCV site-packages path to global site-packages echo /usr/local/opt/opencv@3/lib/python3.</description></item><item><title>How to add ktlint in Android Project</title><link>https://dastaniqbal.github.io/blog/2021-04-04-how-to-add-ktlint-in-android-project/</link><pubDate>Sun, 04 Apr 2021 05:45:51 +0000</pubDate><guid>https://dastaniqbal.github.io/blog/2021-04-04-how-to-add-ktlint-in-android-project/</guid><description>Writing Clean Code is an art and there are some tools that help you to achieve, among those tools my favorite is ktlint. I would suggest whenever you are setting up a new project add this tool in your template.
Here are the steps:
project/build.gradle apply plugin: &amp;#34;org.jlleitschuh.gradle.ktlint&amp;#34; buildscript { repositories { ... maven { url &amp;#34;https://plugins.gradle.org/m2/&amp;#34; } } dependencies { ... //ktlint Plugin classpath &amp;#34;org.jlleitschuh.gradle:ktlint-gradle:9.2.1&amp;#34; } } subprojects { apply plugin: &amp;#34;org.</description></item><item><title>How to use Epoxy with CustomView (PART 4)</title><link>https://dastaniqbal.github.io/blog/2020-09-05-how-to-use-epoxy-with-customview-part-4/</link><pubDate>Sat, 05 Sep 2020 18:14:22 +0000</pubDate><guid>https://dastaniqbal.github.io/blog/2020-09-05-how-to-use-epoxy-with-customview-part-4/</guid><description>Like in the previous part we have seen, how simple to list items using Epoxy Databinding.
In this post, we gonna use CustomView to list items on RecyclerView/EpoxyRecyclerView
Listing with Epoxy CustomView is very simple like we create CustomView in Android. We just need to add annotations to define Epoxy stuff
4. Show List using CustomView
Epoxy CustomView: ItemCustomView
package com.dastnaiqbal.epoxysample.customview import android.content.Context import android.util.AttributeSet import android.widget.FrameLayout import android.widget.TextView import com.</description></item><item><title>Convert icomoon.io Font to Android icons.xml</title><link>https://dastaniqbal.github.io/blog/2020-08-16-convert-icomoon-io-font-to-android-icons-xml/</link><pubDate>Sun, 16 Aug 2020 12:29:17 +0000</pubDate><guid>https://dastaniqbal.github.io/blog/2020-08-16-convert-icomoon-io-font-to-android-icons-xml/</guid><description>We had the requirement to use icomoon.io font file. but we had the concerned when we update font file, its changed icon hexcode. and we wanted to use those hexcode everywhere in our project.
We have written mapping strings xml file in which we were using demo.html file and using icon name as our key and hexcode as our value, but when we update icon name, icon name remain same but hexcode change.</description></item><item><title>How to use Epoxy with Databinding (PART 3)</title><link>https://dastaniqbal.github.io/blog/2020-08-28-how-to-use-epoxy-with-databinding-part-3/</link><pubDate>Sun, 28 Jun 2020 08:09:59 +0000</pubDate><guid>https://dastaniqbal.github.io/blog/2020-08-28-how-to-use-epoxy-with-databinding-part-3/</guid><description>Like in previous Part we have seen how simple to list item using Epoxy ViewHolder.
In this post, we gonna use Databinding to list items on RecyclerView/EpoxyRecyclerView
Listing with Epoxy databinding is bit different, like in android we do databinding by defining &amp;lt;data&amp;gt;&amp;lt;/data&amp;gt; block or using BindingAdapter. In Epoxy we use these features directly and we don&amp;rsquo;t write any extra class to handle all these functions.
3. Show List using Databinding</description></item><item><title>How to use Epoxy with ViewHolder (Part 2)</title><link>https://dastaniqbal.github.io/blog/2020-08-22-airbnb-epoxy-with-viewholder/</link><pubDate>Sat, 27 Jun 2020 10:06:50 +0000</pubDate><guid>https://dastaniqbal.github.io/blog/2020-08-22-airbnb-epoxy-with-viewholder/</guid><description>Like in previous part we have seen how simple to list item using data class.
In this post, we gonna use View Holder to list items on RecyclerView/EpoxyRecyclerView
Listing with ViewHolder is similar like Recycler.ViewHolder but in Epoxy we extend to EpoxyModelWithHolder
2. Show List using ViewHolder
Here we need a helper class KotlinEpoxyHolder that we can get from epoxy sample or from our source code.
package com.dastnaiqbal.epoxysample.helper import android.view.View import com.</description></item><item><title>How to use Epoxy in Android (Part 1)</title><link>https://dastaniqbal.github.io/blog/2020-06-26-how-to-use-epoxy-in-android-part-1/</link><pubDate>Fri, 26 Jun 2020 12:49:56 +0000</pubDate><guid>https://dastaniqbal.github.io/blog/2020-06-26-how-to-use-epoxy-in-android-part-1/</guid><description>Like automation is evolving in a different sector. how it&amp;rsquo;s evolving in Android. As we know about autogenerated code where we use a bunch of annotations and its auto write code for you with the help of kapt and annotationProcessor We know many plugins which write boilerplate code for you For eg Dagger.
Same we are moving to declarative programming like JetPack Compose and Litho. The same Airbnb changes the way to show the list by using Epoxy.</description></item></channel></rss>