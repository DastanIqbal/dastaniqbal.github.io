<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>python on Iqbal Ahmed</title><link>https://dastaniqbal.github.io/tags/python/</link><description>Recent content in python on Iqbal Ahmed</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Wed, 08 Jan 2025 06:07:19 +0000</lastBuildDate><atom:link href="https://dastaniqbal.github.io/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Virtual Maekup: Lipstick Filter using OpenCV and Dlib</title><link>https://dastaniqbal.github.io/blog/2025-01-08-virtual-maekup-lipstick-filter-using-opencv-and-dlib/</link><pubDate>Wed, 08 Jan 2025 06:07:19 +0000</pubDate><guid>https://dastaniqbal.github.io/blog/2025-01-08-virtual-maekup-lipstick-filter-using-opencv-and-dlib/</guid><description>In this post we will walk through the solution to apply lipstick on lips.
We are using dlib to detect the face and extract facial landmark. We will use OpenCV capabilities to do image processing.
These are the steps needed
Image with face Detect face on the image Find lips landmark using dlib. Create a mask for the lips Apply alpha blending mask and original image For eg: I = aF + (1-a)B Display image with applied lipstick Step 1.</description></item><item><title>OpenCV Series: 3. Numpy Data Structures</title><link>https://dastaniqbal.github.io/blog/2021-05-20-opencv-series-4-numpy-data-structures/</link><pubDate>Thu, 20 May 2021 11:09:33 +0000</pubDate><guid>https://dastaniqbal.github.io/blog/2021-05-20-opencv-series-4-numpy-data-structures/</guid><description>As we have used Numpy in our previous post, In this post we gonna learn more about the basics of Numpy which gonna help us in OpenCV.
Numpy is the homogeneous n-dimensional array. Unlike Python list. Numpy array keep all the elements in the same data type. In Numpy, dimensions we called axis. Axis just tells us how many dimensions in the array.
For eg: [1, 2, 1] this is 1-D array, means 1 axis with 3 elements,</description></item><item><title>OpenCV Series: 2. Get Started with OpenCV and Python</title><link>https://dastaniqbal.github.io/blog/2021-05-17-opencv-series-2-get-started-with-opencv-and-python/</link><pubDate>Mon, 17 May 2021 07:42:43 +0000</pubDate><guid>https://dastaniqbal.github.io/blog/2021-05-17-opencv-series-2-get-started-with-opencv-and-python/</guid><description>This is a sample code that does a basic operation reading and writing image and We will learn more about NumPy and cv2.
import numpy as np import cv2 #Read opencv.png logo file from local img = cv2.imread(&amp;quot;opencv.png&amp;quot;) #Create Window cv2.namedWindow(&amp;quot;Logo&amp;quot;,cv2.WINDOW_NORMAL) #Show local opencv.png in window cv2.imshow(&amp;quot;Logo&amp;quot;,img) #Wait user press key eg: Esc cv2.waitKey(0) #Deep copy the opencv.png to output.png in local cv2.imwrite(&amp;quot;output.jpg&amp;quot;,img) exit() Here we are using NumPy, which is a very popular library in AI.</description></item><item><title>OpenCV Series: 1. Installing Python and OpenCV on Mac</title><link>https://dastaniqbal.github.io/blog/2021-05-15-opencv-series-installing-python-and-opencv-on-mac/</link><pubDate>Sat, 15 May 2021 19:36:51 +0000</pubDate><guid>https://dastaniqbal.github.io/blog/2021-05-15-opencv-series-installing-python-and-opencv-on-mac/</guid><description>In this post we will install OpenCV and Python on MacOS
Install XCode sudo xcodebuild -license sudo xcode-select install Install Homebrew ruby -e &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;quot; brew update #To resolve brew error git -C /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core fetch --unshallow #To resolve brew error git -C /usr/local/Homebrew/Library/Taps/homebrew/homebrew-cask fetch --unshallow brew update --force --quiet` Install Python3 #Installing python2 and python3 if not exist brew install python python3 #Symlink python2 and python3 brew link python brew link python3 #If python already installed then it may ask for an upgrade brew upgrade python brew upgrade python3 #Verify python installed correctly which python2 which python3 #Check python version python2 --version python3 --version Install OpenCV # Install OpenCV 3 with Python2 and Python3 bindings brew install opencv@3 #add OpenCV site-packages path to global site-packages echo /usr/local/opt/opencv@3/lib/python3.</description></item><item><title>Convert icomoon.io Font to Android icons.xml</title><link>https://dastaniqbal.github.io/blog/2020-08-16-convert-icomoon-io-font-to-android-icons-xml/</link><pubDate>Sun, 16 Aug 2020 12:29:17 +0000</pubDate><guid>https://dastaniqbal.github.io/blog/2020-08-16-convert-icomoon-io-font-to-android-icons-xml/</guid><description>We had the requirement to use icomoon.io font file. but we had the concerned when we update font file, its changed icon hexcode. and we wanted to use those hexcode everywhere in our project.
We have written mapping strings xml file in which we were using demo.html file and using icon name as our key and hexcode as our value, but when we update icon name, icon name remain same but hexcode change.</description></item></channel></rss>